Синтаксис строки форматирования.

Структура спецификатора формата:
% [флаги] [ширина] [.точность] [размер] тип


"%9.3s love WOW", "Yana" -> "      Yan"
"%9.3", 1488 -> "     1488"
"%09.3", 1488


Пример:
%.5s - флагов нет, ширины нет, точность - .5(для строкового типа означает максимум 5 символов, весь текст после 5 символов игнорируется), тип s - строка

%0*.*f -флаги 0 (дополнить нулями до нужной ширины)
        ширина * (используется число из второго параметра, позиционный аргумент)
        точность .* (используется число из второго аргумента, позиционный аргумент)
        тип f (float - число с плавающей точкой)


Флаги:
 - (минус) - выводимое значение выравнивается по левому краю в пределах минимальной ширины поля. Если флага нет - по правому краю.
 + (плюс) - всегда указывать знак (плюс или минус) для выводимого десятичного числового значения. Если флага нет - показывать знак только для отрицательных чисел.
   (пробел) - помещать перед результатом пробел, если первый символ значения не знак. Если флага нет - вывод может начинаться с цифры. Символ "+" имеет больший приоритет чем пробел. Используется только для десятичных числовых значений.
 # (октоторп) - "альтернативная" форма вывода значения. При выводе числ в формате перед числом будет указываться особенность формата.
 0 (ноль) - дополнять поле до ширины, указанной в поле "ширина" управляющей последовательности, символом 0. Если знака нет - дополнять пробелами. 
 Используется для типов: d, i, o, u, x, X, a, A, e, E, f, F, g, G.
 Для типов d, i, o, u, x, X если "точность" указана, этот флаг игнорируется. Для остальных типов поведение не определено.


 Модификатор ширины:
 Десятичное число или символ * (звездочка).
 Указывает минимальную ширину поля (включая знак для чисел). Если представление величины больше чем ширина поля, то запись выходит за пределы поля (например, %2i для величины 100 даст значение поля в три символа), если представление величины менее указанного числа, то оно будет дополнено (по умолчанию) пробелами слева, поведение может меняться предшествующими флагами.
 Если в качестве ширины указана звездочка, ширина поля указывается в списке аргументов перед значением для вывода.
 Пример:
 printf("%0*x", 8, 15); -> выведет текст "0000000f"


 Модификатор точности:
 указывает на минимальное количество символов, которое должно появиться при обработке типов d, i, o, u, x, X;
 указывает на минимальное количество символов, которое должно появиться после десятичной запятой (точки) при обработке типов a, A, e, E, f, F;
 максимальное количество значащих символов для типов g и G;
 максимальное число символов которые будут выведены для типа s;
 Точность задается в виде точки с поледующим число или звездочкой.
 Если число или звездочка отсутствуют, что предполагается что число равно 0.
 Точка для указания точности используется даже в том случае, если при выводе чисел с плавающей запятой выводится запятая.
 Если после точки указан символ *(звездочка), то при обработке строки форматирования значение для поля читается из списка аргументов.
 (При этом если символ *(звездочка) есть и в поле ширины и поле точности, сначала указывается ширина, потом точность и лишь потом значения для вывода)
 Пример:
 printf("%0*.*f", 8, 4, 2.5); -> выведет текст "002.5000"


 Модификатор размера:
 Поле размер позволяет указывать размер данных, переданных функции. Необходимость в этом поле объясняется особенностями передачи произвольного количества параметров в функцию в языке Си: функция не может сама определить тип и размер переданных данных, так что информацию о типе параметров и точном их размере надо передавать явно.
 
 